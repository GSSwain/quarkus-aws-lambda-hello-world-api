name: Build and Deploy

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CI: true
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      SAM_LAMBDA_ARTIFACT_BUCKET: ${{ secrets.SAM_LAMBDA_ARTIFACT_BUCKET }}
      STACK_NAME: ${{ secrets.STACK_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install graalvm
        uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: '20.2.0.java11'
      - name: Install native-image
        run: gu install native-image
      - name: Build native executable
        run: mvn package -Pnative
      - name: Install Python 3 (required for AWS SAM CLI)
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Install AWS SAM CLI
        run: pip install aws-sam-cli
      - name: SAM Package
        run: sam package --template-file target/sam.native.yaml --output-template-file packaged.yaml --s3-bucket $SAM_LAMBDA_ARTIFACT_BUCKET
      - name: SAM Deploy
        run: sam deploy --template-file packaged.yaml --capabilities CAPABILITY_IAM --stack-name $STACK_NAME

